### Starting build.
# Target: src/main.ml.depends, tags: { package(batteries), package(ocamlgraph), extension:ml, file:src/main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/main.ml > src/main.ml.depends
# Target: src/circuit.ml.depends, tags: { package(batteries), package(ocamlgraph), extension:ml, file:src/circuit.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/circuit.ml > src/circuit.ml.depends # cached
# Target: src/circuit.cmo, tags: { package(batteries), package(ocamlgraph), byte, compile, extension:cmo, extension:ml, file:src/circuit.cmo, file:src/circuit.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package batteries -package ocamlgraph -I src -o src/circuit.cmo src/circuit.ml # cached
# Target: src/eqnLexer.mll, tags: { package(batteries), package(ocamlgraph), extension:mll, file:src/eqnLexer.mll, lexer, ocaml, ocamllex, quiet, traverse }
/home/dklee/.opam/default/bin/ocamllex.opt -q src/eqnLexer.mll # cached
# Target: src/eqnLexer.ml.depends, tags: { package(batteries), package(ocamlgraph), extension:ml, file:src/eqnLexer.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/eqnLexer.ml > src/eqnLexer.ml.depends # cached
# Target: src/eqnParser.mly, tags: { package(batteries), package(ocamlgraph), extension:mly, file:src/eqnParser.mly, infer, ocaml, ocamlyacc, parser, quiet, traverse }
/home/dklee/.opam/default/bin/ocamlyacc src/eqnParser.mly # cached
# Target: src/eqnParser.mli.depends, tags: { package(batteries), package(ocamlgraph), extension:mli, file:src/eqnParser.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/eqnParser.mli > src/eqnParser.mli.depends # cached
# Target: src/eqnParser.cmi, tags: { package(batteries), package(ocamlgraph), byte, compile, extension:mli, file:src/eqnParser.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package batteries -package ocamlgraph -I src -o src/eqnParser.cmi src/eqnParser.mli # cached
# Target: src/eqnLexer.cmo, tags: { package(batteries), package(ocamlgraph), byte, compile, extension:cmo, extension:ml, file:src/eqnLexer.cmo, file:src/eqnLexer.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package batteries -package ocamlgraph -I src -o src/eqnLexer.cmo src/eqnLexer.ml # cached
# Target: src/eqn_printer.ml.depends, tags: { package(batteries), package(ocamlgraph), extension:ml, file:src/eqn_printer.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/eqn_printer.ml > src/eqn_printer.ml.depends # cached
# Target: src/graph_circuit.ml.depends, tags: { package(batteries), package(ocamlgraph), extension:ml, file:src/graph_circuit.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/graph_circuit.ml > src/graph_circuit.ml.depends # cached
# Target: src/pp.ml.depends, tags: { package(batteries), package(ocamlgraph), extension:ml, file:src/pp.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/pp.ml > src/pp.ml.depends # cached
# Target: src/subregion.ml.depends, tags: { package(batteries), package(ocamlgraph), extension:ml, file:src/subregion.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/subregion.ml > src/subregion.ml.depends # cached
# Target: src/subregion.cmo, tags: { package(batteries), package(ocamlgraph), byte, compile, extension:cmo, extension:ml, file:src/subregion.cmo, file:src/subregion.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package batteries -package ocamlgraph -I src -o src/subregion.cmo src/subregion.ml # cached
# Target: src/pp.cmo, tags: { package(batteries), package(ocamlgraph), byte, compile, extension:cmo, extension:ml, file:src/pp.cmo, file:src/pp.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package batteries -package ocamlgraph -I src -o src/pp.cmo src/pp.ml # cached
# Target: src/graph_circuit.cmo, tags: { package(batteries), package(ocamlgraph), byte, compile, extension:cmo, extension:ml, file:src/graph_circuit.cmo, file:src/graph_circuit.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package batteries -package ocamlgraph -I src -o src/graph_circuit.cmo src/graph_circuit.ml # cached
# Target: src/eqn_printer.cmo, tags: { package(batteries), package(ocamlgraph), byte, compile, extension:cmo, extension:ml, file:src/eqn_printer.cmo, file:src/eqn_printer.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package batteries -package ocamlgraph -I src -o src/eqn_printer.cmo src/eqn_printer.ml # cached
# Target: src/graph_opt.ml.depends, tags: { package(batteries), package(ocamlgraph), extension:ml, file:src/graph_opt.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/graph_opt.ml > src/graph_opt.ml.depends # cached
# Target: src/caseLexer.mll, tags: { package(batteries), package(ocamlgraph), extension:mll, file:src/caseLexer.mll, lexer, ocaml, ocamllex, quiet, traverse }
/home/dklee/.opam/default/bin/ocamllex.opt -q src/caseLexer.mll # cached
# Target: src/caseLexer.ml.depends, tags: { package(batteries), package(ocamlgraph), extension:ml, file:src/caseLexer.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/caseLexer.ml > src/caseLexer.ml.depends # cached
# Target: src/caseParser.mly, tags: { package(batteries), package(ocamlgraph), extension:mly, file:src/caseParser.mly, infer, ocaml, ocamlyacc, parser, quiet, traverse }
/home/dklee/.opam/default/bin/ocamlyacc src/caseParser.mly # cached
# Target: src/caseParser.mli.depends, tags: { package(batteries), package(ocamlgraph), extension:mli, file:src/caseParser.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/caseParser.mli > src/caseParser.mli.depends # cached
# Target: src/caseParser.cmi, tags: { package(batteries), package(ocamlgraph), byte, compile, extension:mli, file:src/caseParser.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package batteries -package ocamlgraph -I src -o src/caseParser.cmi src/caseParser.mli # cached
# Target: src/caseLexer.cmo, tags: { package(batteries), package(ocamlgraph), byte, compile, extension:cmo, extension:ml, file:src/caseLexer.cmo, file:src/caseLexer.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package batteries -package ocamlgraph -I src -o src/caseLexer.cmo src/caseLexer.ml # cached
# Target: src/normalize.ml.depends, tags: { package(batteries), package(ocamlgraph), extension:ml, file:src/normalize.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/normalize.ml > src/normalize.ml.depends # cached
# Target: src/unify.ml.depends, tags: { package(batteries), package(ocamlgraph), extension:ml, file:src/unify.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/unify.ml > src/unify.ml.depends # cached
# Target: src/unify.cmo, tags: { package(batteries), package(ocamlgraph), byte, compile, extension:cmo, extension:ml, file:src/unify.cmo, file:src/unify.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package batteries -package ocamlgraph -I src -o src/unify.cmo src/unify.ml # cached
# Target: src/normalize.cmo, tags: { package(batteries), package(ocamlgraph), byte, compile, extension:cmo, extension:ml, file:src/normalize.cmo, file:src/normalize.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package batteries -package ocamlgraph -I src -o src/normalize.cmo src/normalize.ml # cached
# Target: src/z3.ml.depends, tags: { package(batteries), package(ocamlgraph), extension:ml, file:src/z3.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/z3.ml > src/z3.ml.depends # cached
# Target: src/z3.cmo, tags: { package(batteries), package(ocamlgraph), byte, compile, extension:cmo, extension:ml, file:src/z3.cmo, file:src/z3.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package batteries -package ocamlgraph -I src -o src/z3.cmo src/z3.ml # cached
# Target: src/graph_opt.cmo, tags: { package(batteries), package(ocamlgraph), byte, compile, extension:cmo, extension:ml, file:src/graph_opt.cmo, file:src/graph_opt.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package batteries -package ocamlgraph -I src -o src/graph_opt.cmo src/graph_opt.ml # cached
# Target: src/main.cmo, tags: { package(batteries), package(ocamlgraph), byte, compile, extension:cmo, extension:ml, file:src/main.cmo, file:src/main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package batteries -package ocamlgraph -I src -o src/main.cmo src/main.ml
# Target: src/circuit.cmx, tags: { package(batteries), package(ocamlgraph), compile, extension:cmx, extension:ml, file:src/circuit.cmx, file:src/circuit.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package batteries -package ocamlgraph -I src -o src/circuit.cmx src/circuit.ml # cached
# Target: src/eqnParser.ml.depends, tags: { package(batteries), package(ocamlgraph), extension:ml, file:src/eqnParser.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/eqnParser.ml > src/eqnParser.ml.depends # cached
# Target: src/eqnParser.cmx, tags: { package(batteries), package(ocamlgraph), compile, extension:cmx, extension:ml, file:src/eqnParser.cmx, file:src/eqnParser.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package batteries -package ocamlgraph -I src -o src/eqnParser.cmx src/eqnParser.ml # cached
# Target: src/eqnLexer.cmx, tags: { package(batteries), package(ocamlgraph), compile, extension:cmx, extension:ml, file:src/eqnLexer.cmx, file:src/eqnLexer.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package batteries -package ocamlgraph -I src -o src/eqnLexer.cmx src/eqnLexer.ml # cached
# Target: src/subregion.cmx, tags: { package(batteries), package(ocamlgraph), compile, extension:cmx, extension:ml, file:src/subregion.cmx, file:src/subregion.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package batteries -package ocamlgraph -I src -o src/subregion.cmx src/subregion.ml # cached
# Target: src/pp.cmx, tags: { package(batteries), package(ocamlgraph), compile, extension:cmx, extension:ml, file:src/pp.cmx, file:src/pp.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package batteries -package ocamlgraph -I src -o src/pp.cmx src/pp.ml # cached
# Target: src/graph_circuit.cmx, tags: { package(batteries), package(ocamlgraph), compile, extension:cmx, extension:ml, file:src/graph_circuit.cmx, file:src/graph_circuit.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package batteries -package ocamlgraph -I src -o src/graph_circuit.cmx src/graph_circuit.ml # cached
# Target: src/eqn_printer.cmx, tags: { package(batteries), package(ocamlgraph), compile, extension:cmx, extension:ml, file:src/eqn_printer.cmx, file:src/eqn_printer.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package batteries -package ocamlgraph -I src -o src/eqn_printer.cmx src/eqn_printer.ml # cached
# Target: src/caseParser.ml.depends, tags: { package(batteries), package(ocamlgraph), extension:ml, file:src/caseParser.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package batteries -package ocamlgraph -modules src/caseParser.ml > src/caseParser.ml.depends # cached
# Target: src/caseParser.cmx, tags: { package(batteries), package(ocamlgraph), compile, extension:cmx, extension:ml, file:src/caseParser.cmx, file:src/caseParser.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package batteries -package ocamlgraph -I src -o src/caseParser.cmx src/caseParser.ml # cached
# Target: src/caseLexer.cmx, tags: { package(batteries), package(ocamlgraph), compile, extension:cmx, extension:ml, file:src/caseLexer.cmx, file:src/caseLexer.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package batteries -package ocamlgraph -I src -o src/caseLexer.cmx src/caseLexer.ml # cached
# Target: src/unify.cmx, tags: { package(batteries), package(ocamlgraph), compile, extension:cmx, extension:ml, file:src/unify.cmx, file:src/unify.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package batteries -package ocamlgraph -I src -o src/unify.cmx src/unify.ml # cached
# Target: src/normalize.cmx, tags: { package(batteries), package(ocamlgraph), compile, extension:cmx, extension:ml, file:src/normalize.cmx, file:src/normalize.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package batteries -package ocamlgraph -I src -o src/normalize.cmx src/normalize.ml # cached
# Target: src/z3.cmx, tags: { package(batteries), package(ocamlgraph), compile, extension:cmx, extension:ml, file:src/z3.cmx, file:src/z3.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package batteries -package ocamlgraph -I src -o src/z3.cmx src/z3.ml # cached
# Target: src/graph_opt.cmx, tags: { package(batteries), package(ocamlgraph), compile, extension:cmx, extension:ml, file:src/graph_opt.cmx, file:src/graph_opt.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package batteries -package ocamlgraph -I src -o src/graph_opt.cmx src/graph_opt.ml # cached
# Target: src/main.cmx, tags: { package(batteries), package(ocamlgraph), compile, extension:cmx, extension:ml, file:src/main.cmx, file:src/main.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package batteries -package ocamlgraph -I src -o src/main.cmx src/main.ml
# Target: src/main.native, tags: { package(batteries), package(ocamlgraph), dont_link_with, extension:native, file:src/main.native, link, native, ocaml, program, quiet, traverse }
ocamlfind ocamlopt -linkpkg -package batteries -package ocamlgraph -I src src/circuit.cmx src/caseParser.cmx src/caseLexer.cmx src/eqnParser.cmx src/eqnLexer.cmx src/subregion.cmx src/pp.cmx src/graph_circuit.cmx src/eqn_printer.cmx src/unify.cmx src/normalize.cmx src/z3.cmx src/graph_opt.cmx src/main.cmx -o src/main.native
# Compilation successful.
