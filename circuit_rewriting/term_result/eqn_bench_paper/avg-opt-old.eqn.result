cir to graph finished
old graph depth
---graph depth print---
var : m_0 depth : 9
var : m_1 depth : 9
var : m_2 depth : 10
var : m_3 depth : 6
var : m_4 depth : 6
var : m_5 depth : 6
var : m_6 depth : 3
var : m_7 depth : 1
---------------------
============================================= graph opt start ===================================================
initial graph size : 159
initial mult size : 75
whole case num : 398
reduced case num : 77
max case size : 38
min case size : 4
average case size : 13
median case size : 12
(and (not false) norm2) --> norm2
(and (and n325 norm2) n322) --> (and norm2 (and n322 n325))
(not (and (and norm3 norm7) n379)) --> (not (and (and norm7 n379) norm3))
(and n352 (not (and norm3 n336))) --> (xor (and norm3 (and n352 n336)) n352)
(and (and (and n392 norm3) norm7) i_9) --> (and (and norm3 norm7) (and i_9 n392))
(and (and (and n393 norm3) norm7) i_2) --> (and (and norm7 (and i_2 n393)) norm3)
(and (and (and n325 norm3) n322) i_25) --> (and (and norm3 (and i_25 n322)) n325)
(xor (and (and n554 n390) i_9) n618) --> (xor (and (and n390 i_9) n554) n618)
(and (xor (and n107 i_13) n118) n117) --> (xor (and (and n117 i_13) n107) (and n117 n118))
(and (not (and norm3 i_7)) (not i_4)) --> (xor (or (not norm3) (or (not i_7) i_4)) i_4)
(and (and n379 (not (xor n371 n373))) n376) --> (and (xor (not n371) n373) (and n376 n379))
(and (and n441 (xor norm3 (not n218))) n225) --> (and (xor (not norm3) n218) (and n225 n441))
(and n261 (not (xor n215 (and n177 i_23)))) --> (xor (and (and i_23 n261) n177) (and (not n215) n261))
(and n199 (not (xor (and n195 norm4) norm4))) --> (xor (and norm4 (and (not n195) n199)) n199)
(and n101 (not (and (and n85 n78) n74))) --> (xor (and (and n74 n85) (and n78 n101)) n101)
(and (and (not n94) (not norm4)) (not n63)) --> (not (or norm4 (or n63 n94)))
(xor (xor n610 n609) (and (and n547 n322) i_24)) --> (xor (xor (and (and i_24 n322) n547) n610) n609)
(and (xor norm2 (and (not n313) (not n273))) norm2) --> norm2
(and (xor (xor n286 (and n269 n213)) n249) n193) --> (xor (and (xor n286 n249) n193) (and (and n193 n213) n269))
(and (xor n333 (and (and n329 norm4) n317)) n151) --> (and (xor (and norm4 (and n329 n317)) n333) n151)
(and (and (and n379 (not (xor n371 n373))) n376) i_10) --> (and (and (xor (not n373) n371) (and i_10 n376)) n379)
(and (and (and n441 (xor norm4 (not n218))) n225) i_9) --> (and (and (xor (not norm4) n218) (and i_9 n225)) n441)
(and (not (xor (xor n286 (and n269 n213)) n249)) n184) --> (xor (and (xor (not n286) n249) n184) (and (and n184 n213) n269))
(and (not (and (not (and i_7 (not i_6))) norm6)) i_8) --> (xor (and (or (not i_7) i_6) (and norm6 i_8)) i_8)
(and (not (and (not i_6) i_4)) (not (and i_8 i_6))) --> (xor (not (and (xor i_8 i_4) i_6)) i_4)
(xor (xor (xor n690 n689) (and (and n627 n322) i_24)) n686) --> (xor (xor (xor (and (and i_24 n322) n627) n686) n689) n690)
(and (and (not (or n217 n168)) (and (not n120) n226)) i_32) --> (and (and (and i_32 n226) (not n168)) (not (or n217 n120)))
(and (xor (xor n286 (and n269 n213)) (and n248 n213)) n281) --> (xor (and (xor n269 n248) (and n281 n213)) (and n281 n286))
(and n251 (not (xor (and (not norm5) n143) (and norm5 i_25)))) --> (xor (and (and (xor i_25 n143) n251) norm5) (and (not n143) n251))
(and (xor (xor n359 (xor n272 (and n253 n215))) n186) n157) --> (xor (and (xor (xor n186 n272) n359) n157) (and (and n157 n215) n253))
(and (not (and (and norm4 i_6) i_7)) (not (and i_6 i_5))) --> (xor (or (or (not i_6) i_5) (and norm4 i_7)) i_6)
(and (xor (and (and i_6 i_8) i_7) i_4) (and i_7 i_6)) --> (and (and (xor i_8 i_4) i_6) i_7)
(and (and (not (and (not i_7) i_6)) i_3) (xor i_6 norm6)) --> (and (and (xor norm6 i_6) i_3) (or (not i_6) i_7))
(and (and n121 (not (and (not n115) n34))) (and norm6 i_3)) --> (and (and (and i_3 n121) norm6) (or (not n34) n115))
(and (not (xor n245 (not (and (and n240 n230) n226)))) n236) --> (xor (and (and (and n230 n236) n240) n226) (and n236 n245))
(and (and (not (and norm4 n333)) n150) (not (and (not norm4) n336))) --> (and (xor (or (xor (not n336) n333) norm4) n333) n150)
(and (and (and n251 (xor n247 (not n237))) n218) (and n214 n207)) --> (and (and (and (and n251 n218) n207) (xor (not n247) n237)) n214)
(and (and n251 (xor n247 (not (and (and n235 n232) n222)))) n218) --> (and (and (xor (not (and (and n235 n222) n232)) n247) n218) n251)
(and n80 (and (not (xor (xor (xor n48 n45) i_2) i_10)) n53)) --> (and (xor (xor (xor (not i_2) i_10) n45) n48) (and n53 n80))
(and (not (xor (xor n199 (and n188 n152)) (and n175 n152))) n138) --> (xor (and (xor n188 n175) (and n138 n152)) (and (not n199) n138))
(and n211 (not (and (not (and (and n204 n199) norm6)) (not n187)))) --> (or (and (and (and n199 n211) n204) norm6) (and n211 n187))
(and (and (not (and (not i_9) i_3)) i_7) (not (and i_9 norm7))) --> (and (xor norm7 i_9) i_7)
(and (not (and (not (and i_9 i_7)) i_8)) (not (and i_7 i_4))) --> (xor (not (and (and (xor i_4 i_8) i_7) (or i_4 i_9))) i_8)
(and (and (and (xor (xor norm5 n168) n120) n226) (or n168 n120)) i_26) --> (and (and (xor (xor norm5 n168) n120) (and i_26 n226)) (or n168 n120))
(and norm1 (xor (and (not n369) (and n365 n325)) (not (and n365 n325)))) --> norm1
(and (not (xor (and n203 (not (xor n200 n197))) (xor n200 n197))) n188) --> (and (xor (not n200) n197) (and (not n203) n188))
(and n388 (and n359 (xor (xor n271 (and n262 n215)) (and n253 n215)))) --> (and (xor (and (xor n253 n262) n215) n271) (and n359 n388))
(and (and (and n52 (not n47)) (not (and (and n30 n26) n23))) n22) --> (and (not (or (and (and n23 n26) n30) n47)) (and n22 n52))
(xor (and n199 (not (xor (and n195 norm5) norm5))) (xor (and n195 norm5) norm5)) --> (xor (and norm5 (not (or n195 n199))) n199)
(and (and (not (and i_8 (not i_7))) (not i_9)) (not (and (not i_8) i_7))) --> (not (or (xor i_7 i_8) i_9))
(xor (and (xor n359 (xor n271 (and n262 n215))) n186) (and (and n186 n215) n253)) --> (xor (and (and (xor n253 n262) n186) n215) (and (xor n359 n271) n186))
(and (and (not (and (not i_6) i_4)) i_5) (not (and (and norm8 i_6) (not i_4)))) --> (xor (and (and (xor i_4 i_6) i_5) (or norm8 i_4)) i_5)
(and (not (and (not (and i_9 i_5)) (and i_8 i_7))) (not (and (not i_7) i_5))) --> (xor (or (not (and i_7 i_8)) (and i_5 i_9)) (and (not i_7) i_5))
(and (not (not (or (xor i_7 i_8) i_9))) (not (and (not (and i_8 i_7)) i_5))) --> (and (xor (or (xor i_8 i_7) (xor i_5 i_9)) i_5) (or (not i_5) i_7))
(and norm1 (xor (and (xor (and n384 n369) n387) (and n384 n369)) (not (and n384 n369)))) --> norm1
(xor n212 (xor (and (not (xor (and n203 n202) n201)) n188) (xor (and n203 n202) n201))) --> (xor (xor (and (and (not n188) n203) n202) (or n188 n201)) n212)
(xor (and (not (xor (xor (and i_16 i_8) i_7) i_15)) (and norm7 norm15)) (and norm7 norm15)) --> (and (and norm7 (xor i_15 i_7)) norm15)
(and (and norm2 (not (xor (and (not n215) (not n167)) (not (and (not n216) (not n119)))))) n225) --> (and (xor (or n167 n215) (or n216 n119)) (and norm2 n225))
(and (not (xor (or (not norm5) (or (not i_7) i_4)) i_4)) (not (and (and i_7 i_4) norm5))) --> (xor (and norm5 i_7) i_4)
(and (and n450 (not (xor norm4 (not norm10)))) (xor (and (not (xor norm4 (not norm10))) norm10) (not norm10))) --> (and (xor norm10 norm4) n450)
(and (not (and (not (and i_7 i_6)) i_9)) (not (and (and (not i_9) i_7) (not (and i_6 i_5))))) --> (xor (not (and (or i_5 i_9) (and i_6 i_7))) (or i_9 i_7))
(and (xor (and (or (not i_7) i_6) (and (not i_9) i_8)) i_8) (not (and (and i_9 i_7) norm10))) --> (and (xor (and norm10 i_7) i_9) i_8)
(and (and (xor (xor n313 n273) norm4) (xor (and (xor n313 n273) norm4) (and (not n313) (not n273)))) n322) --> (and (and norm4 n322) (not (or n313 n273)))
(and (and (and n387 (xor norm4 (not norm10))) (xor (and (not (xor norm4 (not norm10))) norm10) (not norm10))) i_26) --> (and (not (or norm4 norm10)) (and i_26 n387))
(and (and (xor n216 (not n119)) (not (xor (and (not n215) (not n167)) (not (and norm11 (not n119)))))) n225) --> (and (and (xor norm11 n119) n225) (xor (or n167 n215) n119))
(and (not (and (not (and i_8 i_7)) i_5)) (xor (or (or (not i_6) i_5) (and (not i_8) i_7)) i_6)) --> (xor (not (or (and (xor i_6 i_8) i_7) (xor i_5 i_8))) i_8)
(and (and (xor (not n217) (xor n168 n120)) (xor (and (not n217) (xor n168 n120)) (and (not n168) norm11))) n226) --> (and (not (or n217 n168)) (and norm11 n226))
(and (and (xor (xor n313 n273) norm4) (not (xor (and (xor n313 n273) norm4) (and (not n313) (not n273))))) n322) --> (and (and (xor (xor norm4 n313) n273) n322) (or n313 n273))
(and (and (and n373 (not (xor norm5 (not norm12)))) (xor (and (not (xor norm5 (not norm12))) norm12) (not norm12))) i_24) --> (and (and (xor norm5 norm12) i_24) n373)
(and (and (not (and (not (and i_7 i_6)) (not i_3))) i_4) (not (and (and (xor (not i_2) i_6) i_3) (or (not i_6) i_7)))) --> (and (or (and (xor i_7 i_3) i_6) (and (xor i_6 i_2) i_3)) i_4)
(xor (and n305 (xor (and (xor n264 n257) (not n254)) (not n254))) (and n305 (not (xor (and (xor n264 n257) (not n254)) (not n254))))) --> n305
(and (xor (and (xor (xor n312 n288) (xor n167 n143)) norm6) (and (xor n312 n288) (xor n167 n143))) (and (xor (xor n312 n288) (xor n167 n143)) norm6)) --> (and (xor (xor (xor n288 n143) n312) n167) norm6)
(xor (and (xor (and (xor n313 n273) (xor n216 n192)) (and (not n313) (not n273))) (and (xor n313 n273) (xor n216 n192))) (not (and (xor n313 n273) (xor n216 n192)))) --> true
(and (not (xor (not (and (and (xor i_4 i_8) i_7) (or i_4 i_9))) i_8)) (not (and (and (not (and i_9 i_7)) i_8) (not (and (not (and (not i_9) (not i_7))) (not i_4)))))) --> (and (xor (and (xor i_9 i_7) i_8) i_4) (or (not i_4) i_7))
(and (and (xor norm3 (xor norm8 norm13)) (xor (and norm3 (xor norm8 norm13)) norm21)) (xor (and (xor (and norm3 (xor norm8 norm13)) norm21) (and norm3 (xor norm8 norm13))) (not (and norm3 (xor norm8 norm13))))) --> (and norm21 norm3)
(and (and (xor n364 (not n324)) (xor norm5 (not (and (not n364) (not n324))))) (xor (and (not (xor norm5 (not (and (not n364) (not n324))))) (and (not n364) (not n324))) (not (and (not n364) (not n324))))) --> (and (not norm5) (and n324 n364))
(and (and (xor (xor norm4 norm9) norm14) (xor (and (xor norm4 norm9) norm14) (and norm4 norm9))) (xor (and (xor (and (xor norm4 norm9) norm14) (and norm4 norm9)) (and (xor norm4 norm9) norm14)) (not (and (xor norm4 norm9) norm14)))) --> (and (and norm14 norm4) norm9)


graph_opt called
graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 159
selected cripath : 
n42 n74 n75 n76 n77 n78 n79 n80 n128 n129 n137 n138 n159 n160 n161 n162 m_2 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#0  -->  CVar_n127
tmpvar#1  -->  CVar_n63
tmpvar#2  -->  CVar_n78
---------------------

old bexp : (and n352 (not (and n336 norm3)))
new bexp : (xor (and norm3 (and n352 n336)) n352)
tgt bexp     : (and n127 (not (and n63 n78)))
sub old bexp : (and n127 (not (and n63 n78)))
sub new bexp : (xor (and n78 (and n127 n63)) n127)
before depth : 5
after depth : 4
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n129
tmpvar#0  -->  CVar_n136
tmpvar#2  -->  CVar_n89
---------------------

old bexp : (and (not (and n336 norm3)) n352)
new bexp : (xor (and norm3 (and n352 n336)) n352)
tgt bexp     : (and (not (and n129 n136)) n89)
sub old bexp : (and (not (and n129 n136)) n89)
sub new bexp : (xor (and n136 (and n89 n129)) n89)
before depth : 7
after depth : 6
graph replaced


graph size : 163
graph mult size : 77
optimal graph replaced, cost : 56133
graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 163
selected cripath : 
n64 n65 n68 n69 n77 n78 n79 n80 n108 n111 n112 n121 n122 n123 m_0 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#0  -->  CVar_n107
tmpvar#1  -->  CVar_n63
tmpvar#2  -->  CVar_n78
---------------------

old bexp : (and n352 (not (and n336 norm3)))
new bexp : (xor (and norm3 (and n352 n336)) n352)
tgt bexp     : (and n107 (not (and n63 n78)))
sub old bexp : (and n107 (not (and n63 n78)))
sub new bexp : (xor (and n78 (and n107 n63)) n107)
before depth : 5
after depth : 4
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n108
tmpvar#0  -->  CVar_n110
tmpvar#2  -->  CVar_n120
---------------------

old bexp : (and (not (and norm3 n336)) n352)
new bexp : (xor (and norm3 (and n352 n336)) n352)
tgt bexp     : (and (not (and n108 n110)) n120)
sub old bexp : (and (not (and n108 n110)) n120)
sub new bexp : (xor (and n108 (and n120 n110)) n120)
before depth : 6
after depth : 5
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n104
tmpvar#0  -->  CVar_n99
tmpvar#2  -->  CVar_n121
---------------------

old bexp : (and (not (and n336 norm3)) n352)
new bexp : (xor (and norm3 (and n352 n336)) n352)
tgt bexp     : (and (not (and n104 n99)) n121)
sub old bexp : (and (not (and n104 n99)) n121)
sub new bexp : (xor (and n99 (and n121 n104)) n121)
before depth : 8
after depth : 7
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 165
selected cripath : 
n59 n60 n63 n131 n132 n133 n136 n137 n138 n139 n145 n150 n151 m_1 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#0  -->  CVar_n126
tmpvar#1  -->  CVar_n129
tmpvar#2  -->  CVar_n136
---------------------

old bexp : (and n352 (not (and n336 norm3)))
new bexp : (xor (and norm3 (and n352 n336)) n352)
tgt bexp     : (and n126 (not (and n129 n136)))
sub old bexp : (and n126 (not (and n129 n136)))
sub new bexp : (xor (and n136 (and n126 n129)) n126)
before depth : 7
after depth : 6
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n139
tmpvar#0  -->  CVar_n142
tmpvar#2  -->  CVar_n149
---------------------

old bexp : (and (not (and i_6 i_8)) (not (and (not i_6) i_4)))
new bexp : (xor (not (and (xor i_8 i_4) i_6)) i_4)
tgt bexp     : (and (not (and n139 n142)) (not (and (not n139) n149)))
sub old bexp : (and (not (and n139 n142)) (not (and (not n139) n149)))
sub new bexp : (xor (not (and (xor n142 n149) n139)) n149)
before depth : 8
after depth : 7
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 164
selected cripath : 
n61 n62 n63 n131 n132 n133 n136 n137 n156 n157 n162 m_2 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n129
tmpvar#0  -->  CVar_n136
tmpvar#2  -->  CVar_n155
---------------------

old bexp : (and (and n325 norm2) n322)
new bexp : (and norm2 (and n322 n325))
tgt bexp     : (and (and n129 n136) n155)
sub old bexp : (and (and n129 n136) n155)
sub new bexp : (and n136 (and n155 n129))
before depth : 7
after depth : 6
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 165
selected cripath : 
n64 n65 n68 n69 n77 n78 n79 n80 n85 n86 n87 n88 n92 n93 n94 m_0 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n63
tmpvar#0  -->  CVar_n78
tmpvar#2  -->  CVar_n84
---------------------

old bexp : (and (not (and n336 norm3)) n352)
new bexp : (xor (and norm3 (and n352 n336)) n352)
tgt bexp     : (and (not (and n63 n78)) n84)
sub old bexp : (and (not (and n63 n78)) n84)
sub new bexp : (xor (and n78 (and n84 n63)) n84)
before depth : 5
after depth : 4
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 165
selected cripath : 
n36 n37 n41 n47 n89 tmp109 tmp108 n159 n160 n161 n162 m_2 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n35
tmpvar#0  -->  CVar_n36
tmpvar#2  -->  CVar_n40
---------------------

old bexp : (and (and n325 norm2) n322)
new bexp : (and norm2 (and n322 n325))
tgt bexp     : (and (and n35 n36) n40)
sub old bexp : (and (and n35 n36) n40)
sub new bexp : (and n36 (and n40 n35))
before depth : 3
after depth : 2
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 166
selected cripath : 
m_2 n162 n161 n160 n159 tmp108 n136 n133 n132 n78 n77 n69 n68 n67 n66 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 166
selected cripath : 
n61 n62 n63 n131 n132 n133 n136 tmp108 n159 n160 n161 n162 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 166
selected cripath : 
n61 n62 n63 n131 n132 n133 n136 tmp108 n159 n160 n161 n162 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 166
selected cripath : 
n81 n83 n84 n127 tmp71 tmp70 n128 n129 tmp109 tmp108 n159 n160 n161 n162 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 166
selected cripath : 
m_2 n162 n161 n160 n159 tmp108 n136 n133 n132 n78 n77 n69 n68 n65 n64 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 166
selected cripath : 
m_2 n162 n161 n160 n159 tmp108 n136 n133 n132 n78 n77 n69 n68 n65 n64 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 166
selected cripath : 
n82 n83 n84 n127 tmp71 tmp70 n128 n129 tmp109 tmp108 n159 n160 n161 n162 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 166
selected cripath : 
m_2 n162 n161 n160 n159 tmp108 n136 n133 n132 n78 n77 n69 n68 n65 n64 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 166
selected cripath : 
n59 n60 n63 n131 n132 n133 n136 tmp108 n159 n160 n161 n162 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 166
selected cripath : 
n82 n83 n84 n127 tmp71 tmp70 n128 n129 tmp109 tmp108 n159 n160 n161 n162 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 166
selected cripath : 
m_2 n162 n161 n160 n159 tmp108 n136 n133 n132 n131 n63 n60 n59 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 166
selected cripath : 
n61 n62 n63 tmp71 tmp70 n128 n129 tmp109 tmp108 n159 n160 n161 n162 m_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 166
selected cripath : 
m_2 n162 n161 n160 n159 tmp108 tmp109 n129 n128 tmp70 tmp71 n127 n84 n83 n82 

dangling node deleted : nodeVal : AND index : 225
dangling node deleted : nodeVal : AND index : 287
cleanup fin
sharing detect fin
cleanup fin
graph opt finished
INORDER = i_9 i_8 i_7 i_6 i_5 i_4 i_3 i_2 i_17 i_16 i_15 i_14 i_13 i_12 i_11 i_10;
OUTORDER = m_7 m_6 m_5 m_4 m_3 m_2 m_1 m_0;
n100 = (!i_2);
n109 = (i_12 * n100);
n114 = (!i_11);
n140 = (!i_10 * n100) + (i_10 * !n100);
n25 = (i_10 * i_2);
n26 = (i_11 * i_3);
n30 = (!i_10);
n35 = (!i_16 * i_8) + (i_16 * !i_8);
n36 = (i_17 * i_9);
n38 = (!i_7);
n39 = (!i_15 * n38) + (i_15 * !n38);
n42 = (!i_6);
n43 = (!i_14 * n42) + (i_14 * !n42);
n45 = (!i_13 * i_5) + (i_13 * !i_5);
n50 = (!i_3);
n51 = (!i_11 * n50) + (i_11 * !n50);
n52 = (i_12 * i_4);
n57 = (!i_4);
n58 = (!i_12 * n57) + (i_12 * !n57);
n59 = (i_13 * i_5);
n61 = (i_14 * i_6);
n64 = (i_15 * i_7);
n66 = (i_16 * i_8);
n70 = (!i_15);
n73 = (!i_14);
n81 = (!i_5);
n82 = (!i_13);
n95 = (!i_12);
m_7 = (!n35 * n36) + (n35 * !n36);
n101 = (n100 * n30);
n113 = (!n25);
n115 = (n114 * n50);
n125 = (!n51);
n130 = (!n58);
n27 = (!n26);
n28 = (n25 * n27);
n31 = (n26 * n30);
n37 = (n35 * n36);
n40 = (!n39);
n44 = (!n43);
n46 = (n44 * n45);
n53 = (!n52);
n54 = (n51 * n53);
n60 = (!n59);
n62 = (!n61);
n65 = (!n64);
n67 = (!n66);
n71 = (n38 * n70);
n74 = (n42 * n73);
n83 = (n81 * n82);
n96 = (n57 * n95);
n102 = (!n101);
n103 = (n27 * n53);
n110 = (n109 * n31);
n116 = (!n115);
n117 = (n113 * n116);
n134 = (n130 * n83);
n141 = (!n140 * n27) + (n140 * !n27);
n146 = (n125 * n96);
n155 = (!n125 * n96) + (n125 * !n96);
n165 = (!n37);
n181 = (n165 * n67);
n29 = (!n28);
n32 = (!n31);
n41 = (n37 * n40);
n47 = (n41 * n46);
n55 = (!n54);
n63 = (n60 * n62);
n68 = (n65 * n67);
n72 = (!n71);
n75 = (!n74);
n84 = (!n83);
n97 = (!n96);
m_6 = (!n181 * n39) + (n181 * !n39);
n104 = (n102 * n103);
n107 = (i_4 * n84);
n118 = (!n117);
n119 = (n102 * n118);
n127 = (n58 * n84);
n131 = (n130 * n63);
n135 = (!n134);
n147 = (!n146);
n148 = (n116 * n147);
n166 = (n165 * n68);
n174 = (!n41);
n33 = (n29 * n32);
n69 = (!n68);
n76 = (n72 * n75);
n89 = (!n47);
n90 = (n32 * n89);
tmp71 = (n127 * n63);
n120 = (!n119);
n142 = (!n141 * n89) + (n141 * !n89);
n149 = (!n140 * n148) + (n140 * !n148);
n167 = (!n166);
n175 = (n174 * n67);
n34 = (!n33);
n48 = (n34 * n47);
n77 = (n69 * n76);
n91 = (!n90);
n168 = (n167 * n72);
n176 = (!n175);
n49 = (!n48);
n78 = (!n77);
tmp70 = (n78 * tmp71);
n128 = (!n127 * tmp70) + (n127 * !tmp70);
n132 = (n131 * n78);
n169 = (!n168);
n177 = (n176 * n40);
n56 = (n49 * n55);
n79 = (n63 * n78);
n129 = (!n128);
n133 = (!n132);
n170 = (n169 * n62);
n178 = (!n177);
n80 = (!n79);
n108 = (n107 * n80);
n136 = (n133 * n135);
n137 = (n129 * n136);
n171 = (!n170);
n179 = (n178 * n65);
n85 = (n80 * n84);
tmp109 = (n129 * n89);
m_3 = (!n137 * n89) + (n137 * !n89);
m_5 = (!n179 * n43) + (n179 * !n43);
n111 = (n108 * n110);
n126 = (!n108 * n125) + (n108 * !n125);
n138 = (!n137);
n156 = (n137 * n155);
n172 = (n171 * n75);
n86 = (!n85);
n98 = (n85 * n97);
tmp108 = (n136 * tmp109);
m_4 = (!n172 * n45) + (n172 * !n45);
n112 = (!n111);
n139 = (n126 * n138);
n157 = (!n156);
n158 = (!n126);
n159 = (!n89 * tmp108) + (n89 * !tmp108);
n87 = (n58 * n86);
n99 = (!n98);
n105 = (n104 * n99);
n121 = (n112 * n120);
n143 = (n139 * n142);
n145 = (!n139);
n153 = (n139 * n47);
n160 = (n158 * n159);
n88 = (!n87);
n106 = (!n105);
n122 = (n106 * n121);
n144 = (!n143);
n150 = (n145 * n149);
n154 = (!n153);
n161 = (!n160);
n162 = (n157 * n161);
n92 = (n88 * n91);
m_2 = (n154 * n162);
n123 = (!n122);
n151 = (!n150);
n93 = (n56 * n92);
m_1 = (n144 * n151);
n94 = (!n93);
m_0 = (n123 * n94);


new graph depth
---graph depth print---
var : m_0 depth : 9
var : m_1 depth : 9
var : m_2 depth : 9
var : m_3 depth : 6
var : m_4 depth : 6
var : m_5 depth : 6
var : m_6 depth : 3
var : m_7 depth : 1
---------------------
