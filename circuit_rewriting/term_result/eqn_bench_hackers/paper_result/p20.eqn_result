cir to graph finished
old graph depth
---graph depth print---
var : om_0 depth : 10
---------------------
============================================= graph opt start ===================================================
initial graph size : 227
initial mult size : 124
whole case num : 495
reduced case num : 114


graph_opt called
graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 227
selected cripath : 
n37 n39 n40 n48 n183 n184 n200 n201 n202 n222 n223 om_0 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n184
tmpvar#0  -->  CVar_n187
tmpvar#2  -->  CVar_n199
---------------------

old bexp : (and (not (and (not i_6) i_4)) (not (and i_6 i_8)))
new bexp : (xor (not (and (xor i_8 i_4) i_6)) i_4)
tgt bexp     : (and (not (and (not n184) n187)) (not (and n184 n199)))
sub old bexp : (and (not (and (not n184) n187)) (not (and n184 n199)))
sub new bexp : (xor (not (and (xor n199 n187) n184)) n187)
before depth : 7
after depth : 6
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 226
selected cripath : 
om_0 n223 n222 n221 n220 n219 n216 n215 n178 n177 n176 n175 n174 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#2  -->  CVar_n178
tmpvar#1  -->  CVar_n212
tmpvar#0  -->  CVar_n213
tmpvar#3  -->  CVar_n218
---------------------

old bexp : (and (not (and n97 (and n66 n65))) i18)
new bexp : (xor (and (and (and i18 n66) n65) n97) i18)
tgt bexp     : (and (not (and n178 (and n212 n213))) n218)
sub old bexp : (and (not (and n178 (and n212 n213))) n218)
sub new bexp : (xor (and (and (and n218 n212) n213) n178) n218)
before depth : 6
after depth : 5
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 226
selected cripath : 
n41 n43 n47 n48 n183 n184 n185 n227 n228 n229 n230 n231 n232 n259 om_0 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#0  -->  CVar_n144
tmpvar#1  -->  CVar_n178
tmpvar#2  -->  CVar_n182
tmpvar#3  -->  CVar_n48
---------------------

old bexp : (and i18 (not (and n97 (and n66 n65))))
new bexp : (xor (and (and (and i18 n66) n65) n97) i18)
tgt bexp     : (and n144 (not (and n178 (and n182 n48))))
sub old bexp : (and n144 (not (and n178 (and n182 n48))))
sub new bexp : (xor (and (and (and n144 n182) n48) n178) n144)
before depth : 6
after depth : 5
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 228
selected cripath : 
om_0 n223 n222 n221 n209 n208 n205 n204 n178 n177 n176 n54 n53 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n178
tmpvar#0  -->  CVar_n203
tmpvar#2  -->  CVar_n207
---------------------

old bexp : (and (not (and norm3 n63)) n127)
new bexp : (xor (and norm3 (and n63 n127)) n127)
tgt bexp     : (and (not (and n178 n203)) n207)
sub old bexp : (and (not (and n178 n203)) n207)
sub new bexp : (xor (and n178 (and n203 n207)) n207)
before depth : 6
after depth : 5
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 228
selected cripath : 
om_0 n259 n258 n257 n249 n248 n247 n244 n243 n242 n241 n85 n77 n76 n74 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#1  -->  CVar_n240
tmpvar#0  -->  CVar_n242
tmpvar#2  -->  CVar_n246
---------------------

old bexp : (and (not (and n63 norm3)) n127)
new bexp : (xor (and norm3 (and n63 n127)) n127)
tgt bexp     : (and (not (and n240 n242)) n246)
sub old bexp : (and (not (and n240 n242)) n246)
sub new bexp : (xor (and n242 (and n240 n246)) n246)
before depth : 6
after depth : 5
graph replaced


unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#0  -->  CVar_n240
tmpvar#1  -->  CVar_n71
tmpvar#2  -->  CVar_n85
---------------------

old bexp : (and n127 (not (and n63 norm3)))
new bexp : (xor (and norm3 (and n63 n127)) n127)
tgt bexp     : (and n240 (not (and n71 n85)))
sub old bexp : (and n240 (not (and n71 n85)))
sub new bexp : (xor (and n85 (and n71 n240)) n240)
before depth : 5
after depth : 4
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 228
selected cripath : 
n59 n60 n71 n177 n178 n184 n254 n255 n256 n257 n258 n259 om_0 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#2  -->  CVar_n178
tmpvar#1  -->  CVar_n182
tmpvar#0  -->  CVar_n48
tmpvar#3  -->  CVar_n253
---------------------

old bexp : (and (and norm3 (and n136 n151)) i24)
new bexp : (and (and (and i24 n136) n151) norm3)
tgt bexp     : (and (and n178 (and n182 n48)) n253)
sub old bexp : (and (and n178 (and n182 n48)) n253)
sub new bexp : (and (and (and n253 n182) n48) n178)
before depth : 6
after depth : 5
graph replaced


graph mult size : 126
optimal graph replaced, cost : 91854
graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 230
selected cripath : 
n45 n46 n47 n48 n183 n184 n225 n226 n231 n232 n259 om_0 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 230
selected cripath : 
n53 n54 n176 n177 n178 n251 n252 n256 n257 n258 n259 om_0 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 230
selected cripath : 
n79 n80 n89 n90 n91 n92 n93 n94 n95 n172 n223 om_0 

unsat
pattern matched!
tgt, new_tgt same? : true
----print_subst start----
tmpvar#0  -->  CVar_i6
tmpvar#1  -->  CVar_n77
tmpvar#2  -->  CVar_n80
tmpvar#3  -->  CVar_n81
---------------------

old bexp : (and i18 (not (and n97 (and n65 n66))))
new bexp : (xor (and (and (and i18 n66) n65) n97) i18)
tgt bexp     : (and i6 (not (and n77 (and n80 n81))))
sub old bexp : (and i6 (not (and n77 (and n80 n81))))
sub new bexp : (xor (and (and (and i6 n81) n80) n77) i6)
before depth : 4
after depth : 3
graph replaced


graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 231
selected cripath : 
om_0 n223 n172 n171 n170 n169 n159 n153 n152 n151 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 231
selected cripath : 
n75 n76 n77 n85 n241 n242 tmp7796 n247 n248 n249 n257 n258 n259 om_0 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 231
selected cripath : 
n74 n76 n77 n85 n86 n87 n88 n94 n95 n172 n223 om_0 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 231
selected cripath : 
om_0 n223 n172 n95 n69 n68 n67 n66 n65 n64 n36 n35 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 231
selected cripath : 
om_0 n259 n258 n257 n256 n252 n251 n178 n177 n71 n60 n59 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 231
selected cripath : 
n53 n54 n176 n177 n178 n233 n238 n239 n248 n249 n257 n258 n259 om_0 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 231
selected cripath : 
n78 n80 n84 n85 n178 n251 n252 n256 n257 n258 n259 om_0 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 231
selected cripath : 
om_0 n223 n222 n202 tmp1478 tmp1479 n184 n178 n177 n71 n60 n59 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 231
selected cripath : 
n174 n175 n176 n177 n178 n184 tmp1479 tmp1478 n202 n222 n223 om_0 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 231
selected cripath : 
om_0 n259 n258 n257 n249 n248 n247 tmp7796 n242 n241 n85 n77 n76 n74 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 231
selected cripath : 
n78 n80 n84 n85 n178 tmp4970 n227 n228 n229 n230 n231 n232 n259 om_0 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 231
selected cripath : 
om_0 n259 n258 n257 n256 n252 n251 n178 n177 n176 n54 n52 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 231
selected cripath : 
om_0 n223 n222 n221 n220 n219 tmp2906 n178 n85 n84 n80 n79 

dangling node deleted : nodeVal : AND index : 371
dangling node deleted : nodeVal : AND index : 383
dangling node deleted : nodeVal : AND index : 405
dangling node deleted : nodeVal : AND index : 421
dangling node deleted : nodeVal : AND index : 453
dangling node deleted : nodeVal : AND index : 461
dangling node deleted : nodeVal : AND index : 475
dangling node deleted : nodeVal : n189 index : 1
dangling node deleted : nodeVal : n201 index : 1
dangling node deleted : nodeVal : n205 index : 1
dangling node deleted : nodeVal : n216 index : 1
dangling node deleted : nodeVal : n244 index : 1
dangling node deleted : nodeVal : NOT index : 345
dangling node deleted : nodeVal : NOT index : 369
dangling node deleted : nodeVal : NOT index : 377
dangling node deleted : nodeVal : NOT index : 399
dangling node deleted : nodeVal : NOT index : 455
dangling node deleted : nodeVal : n188 index : 1
dangling node deleted : nodeVal : n200 index : 1
dangling node deleted : nodeVal : n204 index : 1
dangling node deleted : nodeVal : n215 index : 1
dangling node deleted : nodeVal : n243 index : 1
dangling node deleted : nodeVal : AND index : 343
dangling node deleted : nodeVal : AND index : 367
dangling node deleted : nodeVal : AND index : 375
dangling node deleted : nodeVal : AND index : 397
dangling node deleted : nodeVal : XOR index : 523
dangling node deleted : nodeVal : n185 index : 1
dangling node deleted : nodeVal : n214 index : 1
dangling node deleted : nodeVal : tmp7848 index : 1
dangling node deleted : nodeVal : AND index : 395
dangling node deleted : nodeVal : AND index : 522
dangling node deleted : nodeVal : NOT index : 337
dangling node deleted : nodeVal : tmp7849 index : 1
dangling node deleted : nodeVal : AND index : 520
cleanup fin
sharing detect fin
cleanup fin
graph opt finished
INORDER = i9 i8 i7 i6 i5 i4 i31 i30 i3 i29 i28 i27 i26 i25 i24 i23 i22 i21 i20 i2 i19 i18 i17 i16 i15 i14 i13 i12 i11 i10 i1 i0;
OUTORDER = om_0;
n100 = (i1 * i2);
n104 = (i12 * i13);
n106 = (i15 * i16);
n109 = (i10 * i11);
n111 = (i17 * i20);
n126 = (!i15);
n135 = (!i25);
n136 = (!i27);
n141 = (!i26);
n142 = (!i29);
n149 = (i8 * i9);
n151 = (i27 * i29);
n154 = (i3 * i5);
n156 = (i18 * i19);
n160 = (!i28);
n173 = (!i12);
n174 = (!i13);
n179 = (!i24);
n180 = (!i14);
n190 = (!i28 * n141) + (i28 * !n141);
n192 = (!i30);
n193 = (!i31);
n34 = (!i18);
n35 = (!i19);
n37 = (!i17);
n38 = (!i20);
n41 = (!i22);
n42 = (!i23);
n44 = (!i16);
n45 = (!i21);
n52 = (!i10);
n53 = (!i11);
n58 = (!i8);
n59 = (!i9);
n70 = (!i7);
n73 = (!i0);
n74 = (!i1);
n75 = (!i2);
n78 = (!i3);
n79 = (!i5);
n81 = (!i4);
n82 = (!i6);
n96 = (i30 * i31);
n98 = (i22 * i23);
n101 = (!n100);
n105 = (!n104);
n107 = (!n106);
n110 = (!n109);
n112 = (!n111);
n127 = (n126 * n44);
n137 = (n135 * n136);
n143 = (n141 * n142);
n150 = (!n149);
n152 = (!n151);
n155 = (!n154);
n157 = (!n156);
n161 = (n141 * n160);
n175 = (n173 * n174);
n181 = (n126 * n180);
n182 = (n179 * n181);
n186 = (n135 * n160);
n191 = (n137 * n190);
n194 = (n192 * n193);
n195 = (n142 * n194);
n203 = (n181 * n44);
n245 = (n179 * n38);
n246 = (n136 * n245);
n250 = (n136 * n181);
n253 = (n135 * n141);
n36 = (n34 * n35);
n39 = (n37 * n38);
n43 = (n41 * n42);
n46 = (n44 * n45);
n54 = (n52 * n53);
n60 = (n58 * n59);
n71 = (n60 * n70);
n76 = (n74 * n75);
n77 = (n73 * n76);
n80 = (n78 * n79);
n83 = (n81 * n82);
n89 = (n80 * n81);
n97 = (!n96);
n99 = (!n98);
n102 = (n101 * n99);
n103 = (n102 * n97);
n108 = (n105 * n107);
n113 = (n110 * n112);
n116 = (n36 * n44);
n120 = (!n77);
n121 = (!n89);
n128 = (!n127);
n131 = (!n80);
n138 = (!n137);
n144 = (!n143);
n153 = (n150 * n152);
n158 = (n155 * n157);
n162 = (!n161);
n165 = (!n76);
n176 = (n175 * n54);
n177 = (n176 * n71);
n187 = (!n186);
n196 = (!n195);
n197 = (n186 * n196);
n206 = (n36 * n37);
n210 = (!n43);
n217 = (n43 * n45);
n224 = (n143 * n191);
n40 = (n36 * n39);
n47 = (n43 * n46);
n55 = (!n54);
n61 = (!n60);
n64 = (!n36);
n72 = (!n71);
n84 = (n80 * n83);
n85 = (n77 * n84);
n90 = (n77 * n89);
tmp4972 = (n144 * n182);
tmp9485 = (n182 * n253);
n114 = (n108 * n113);
n115 = (n103 * n114);
n117 = (!n116);
n122 = (n120 * n121);
n129 = (i14 * n128);
n132 = (i4 * n131);
n139 = (i28 * n138);
n145 = (i25 * n144);
n159 = (n153 * n158);
n163 = (i29 * n162);
n166 = (i0 * n165);
n178 = (n177 * n85);
n198 = (!n197);
n199 = (n191 * n198);
n207 = (!n206);
n211 = (i21 * n210);
n213 = (n203 * n40);
n218 = (!n217);
n234 = (i12 * n55);
n240 = (!n176);
n241 = (n71 * n85);
n251 = (n178 * n250);
n48 = (n40 * n47);
n56 = (i13 * n55);
n62 = (i7 * n61);
n65 = (i17 * n64);
n86 = (!n85);
n87 = (n72 * n86);
n91 = (!n90);
tmp1480 = (!n187 * n199) + (n187 * !n199);
tmp4971 = (n48 * tmp4972);
tmp6284 = (n203 * n207);
tmp7797 = (n240 * n246);
tmp9484 = (n48 * tmp9485);
n118 = (i20 * n117);
n123 = (!n122);
n130 = (!n129);
n133 = (!n132);
n140 = (!n139);
n146 = (!n145);
n164 = (!n163);
n167 = (!n166);
n183 = (n182 * n48);
n184 = (n178 * n183);
n212 = (!n211);
n225 = (n184 * n224);
n233 = (!n178);
n235 = (!n234);
n242 = (!n241);
n252 = (!n251);
n254 = (n178 * tmp9484);
n49 = (!n48);
n57 = (!n56);
n63 = (!n62);
n66 = (!n65);
n88 = (!n87);
n92 = (i6 * n91);
tmp1479 = (n184 * tmp1480);
tmp2908 = (n212 * n218);
tmp4970 = (n178 * tmp4971);
tmp6283 = (n178 * tmp6284);
tmp7796 = (n242 * tmp7797);
n119 = (!n118);
n124 = (n119 * n123);
n125 = (n115 * n124);
n134 = (n130 * n133);
n147 = (n140 * n146);
n168 = (n164 * n167);
n208 = (!n207 * tmp6283) + (n207 * !tmp6283);
n226 = (!n225);
n227 = (!n144 * tmp4970) + (n144 * !tmp4970);
n236 = (n203 * n235);
n247 = (!n246 * tmp7796) + (n246 * !tmp7796);
n255 = (!n254);
n256 = (n252 * n255);
n50 = (i24 * n49);
n67 = (n63 * n66);
n68 = (n57 * n67);
n93 = (!n92);
n94 = (n88 * n93);
tmp1478 = (!tmp1479);
tmp2907 = (n213 * tmp2908);
n148 = (n134 * n147);
n169 = (n159 * n168);
n202 = (!n187 * tmp1478) + (n187 * !tmp1478);
n209 = (!n208);
n228 = (!n227);
n237 = (!n236);
n238 = (n233 * n237);
n51 = (!n50);
n69 = (n51 * n68);
n95 = (n69 * n94);
tmp2906 = (n178 * tmp2907);
n170 = (n148 * n169);
n171 = (n125 * n170);
n172 = (n171 * n95);
n219 = (!n218 * tmp2906) + (n218 * !tmp2906);
n229 = (n194 * n228);
n239 = (!n238);
n248 = (n239 * n247);
n220 = (!n219);
n221 = (n209 * n220);
n222 = (n202 * n221);
n223 = (n172 * n222);
n230 = (!n229);
n231 = (n226 * n230);
n249 = (!n248);
n257 = (n249 * n256);
n232 = (!n231);
n258 = (!n257);
n259 = (n232 * n258);
om_0 = (n223 * n259);


new graph depth
---graph depth print---
var : om_0 depth : 9
---------------------
