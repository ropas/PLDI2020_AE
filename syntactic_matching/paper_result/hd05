cir to graph finished
old graph depth
---graph depth print---
var : om_0 depth : 7
var : om_1 depth : 7
var : om_2 depth : 7
var : om_3 depth : 7
var : om_4 depth : 7
var : om_5 depth : 7
var : om_6 depth : 7
var : om_7 depth : 7
var : om_8 depth : 7
var : om_9 depth : 7
var : om_10 depth : 7
var : om_11 depth : 7
var : om_12 depth : 7
var : om_13 depth : 7
var : om_14 depth : 7
var : om_15 depth : 7
var : om_16 depth : 7
var : om_17 depth : 7
var : om_18 depth : 7
var : om_19 depth : 7
var : om_20 depth : 7
var : om_21 depth : 7
var : om_22 depth : 7
var : om_23 depth : 7
var : om_24 depth : 7
var : om_25 depth : 7
var : om_26 depth : 7
var : om_27 depth : 7
var : om_28 depth : 7
var : om_29 depth : 7
var : om_30 depth : 7
var : om_31 depth : 7
---------------------
============================================= graph opt start ===================================================
initial graph size : 295
whole case num : 495
reduced case num : 154


graph_opt called
graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 295
selected cripath : 
n100 n101 n104 n110 n111 n119 n131 n132 n148 n172 n173 n207 n255 n256 n326 n346 om_9 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 295
selected cripath : 
om_1 n330 n326 n256 n255 n207 n173 n172 n148 n132 n131 n119 n111 n110 n104 n101 n100 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 295
selected cripath : 
om_26 n380 n326 n256 n255 n207 n173 n172 n148 n132 n131 n119 n111 n110 n104 n101 n100 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 295
selected cripath : 
om_22 n372 n326 n256 n255 n207 n173 n172 n148 n132 n131 n119 n111 n110 n104 n101 n100 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 295
selected cripath : 
om_30 n388 n326 n256 n255 n207 n173 n172 n148 n132 n131 n119 n111 n110 n104 n101 n100 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 295
selected cripath : 
n100 n101 n104 n110 n111 n119 n131 n132 n148 n172 n173 n207 n255 n256 n326 n386 om_29 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 295
selected cripath : 
n99 n100 n101 n104 n110 n111 n119 n131 n132 n148 n172 n173 n207 n255 n256 n326 n344 om_8 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 295
selected cripath : 
om_28 n384 n326 n256 n255 n207 n173 n172 n148 n132 n131 n119 n111 n110 n104 n101 n100 n99 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 295
selected cripath : 
n99 n100 n101 n104 n110 n111 n119 n131 n132 n148 n172 n173 n207 n255 n256 n326 n350 om_11 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 295
selected cripath : 
om_21 n370 n326 n256 n255 n207 n173 n172 n148 n132 n131 n119 n111 n110 n104 n101 n100 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 295
selected cripath : 
n100 n101 n104 n110 n111 n119 n131 n132 n148 n172 n173 n207 n255 n256 n326 n332 om_2 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 295
selected cripath : 
n100 n101 n104 n110 n111 n119 n131 n132 n148 n172 n173 n207 n255 n256 n326 n356 om_14 

graph opt iter finished
============================================= graph opt iter once ===================================================
now graph size : 295
selected cripath : 
n99 n100 n101 n104 n110 n111 n119 n131 n132 n148 n172 n173 n207 n255 n256 n326 n330 om_1 

graph opt finished
INORDER = i9 i8 i7 i63 i62 i61 i60 i6 i59 i58 i57 i56 i55 i54 i53 i52 i51 i50 i5 i49 i48 i47 i46 i45 i44 i43 i42 i41 i40 i4 i39 i38 i37 i36 i35 i34 i33 i32 i31 i30 i3 i29 i28 i27 i26 i25 i24 i23 i22 i21 i20 i2 i19 i18 i17 i16 i15 i14 i13 i12 i11 i10 i1 i0;
OUTORDER = om_9 om_8 om_7 om_6 om_5 om_4 om_31 om_30 om_3 om_29 om_28 om_27 om_26 om_25 om_24 om_23 om_22 om_21 om_20 om_2 om_19 om_18 om_17 om_16 om_15 om_14 om_13 om_12 om_11 om_10 om_1 om_0;
n102 = (!i1);
n103 = (i33 * n102);
n105 = (!i2 * i34) + (i2 * !i34);
n107 = (!i3 * i35) + (i3 * !i35);
n112 = (!i2);
n113 = (i34 * n112);
n116 = (!i3);
n117 = (i35 * n116);
n120 = (!i38 * i6) + (i38 * !i6);
n122 = (!i39 * i7) + (i39 * !i7);
n125 = (!i36 * i4) + (i36 * !i4);
n127 = (!i37 * i5) + (i37 * !i5);
n133 = (!i4);
n134 = (i36 * n133);
n136 = (!i5);
n137 = (i37 * n136);
n140 = (!i6);
n141 = (i38 * n140);
n144 = (!i7);
n145 = (i39 * n144);
n149 = (!i14 * i46) + (i14 * !i46);
n151 = (!i15 * i47) + (i15 * !i47);
n154 = (!i12 * i44) + (i12 * !i44);
n156 = (!i13 * i45) + (i13 * !i45);
n160 = (!i10 * i42) + (i10 * !i42);
n162 = (!i11 * i43) + (i11 * !i43);
n165 = (!i40 * i8) + (i40 * !i8);
n167 = (!i41 * i9) + (i41 * !i9);
n174 = (!i8);
n175 = (i40 * n174);
n177 = (!i9);
n178 = (i41 * n177);
n182 = (!i10);
n183 = (i42 * n182);
n186 = (!i11);
n187 = (i43 * n186);
n191 = (!i12);
n192 = (i44 * n191);
n194 = (!i13);
n195 = (i45 * n194);
n198 = (!i14);
n199 = (i46 * n198);
n202 = (!i15);
n203 = (i47 * n202);
n208 = (!i30 * i62) + (i30 * !i62);
n210 = (!i31 * i63) + (i31 * !i63);
n213 = (!i28 * i60) + (i28 * !i60);
n215 = (!i29 * i61) + (i29 * !i61);
n219 = (!i26 * i58) + (i26 * !i58);
n221 = (!i27 * i59) + (i27 * !i59);
n224 = (!i24 * i56) + (i24 * !i56);
n226 = (!i25 * i57) + (i25 * !i57);
n231 = (!i22 * i54) + (i22 * !i54);
n233 = (!i23 * i55) + (i23 * !i55);
n236 = (!i20 * i52) + (i20 * !i52);
n238 = (!i21 * i53) + (i21 * !i53);
n242 = (!i18 * i50) + (i18 * !i50);
n244 = (!i19 * i51) + (i19 * !i51);
n247 = (!i16 * i48) + (i16 * !i48);
n249 = (!i17 * i49) + (i17 * !i49);
n257 = (!i16);
n258 = (i48 * n257);
n260 = (!i17);
n261 = (i49 * n260);
n265 = (!i18);
n266 = (i50 * n265);
n269 = (!i19);
n270 = (i51 * n269);
n275 = (!i20);
n276 = (i52 * n275);
n278 = (!i21);
n279 = (i53 * n278);
n282 = (!i22);
n283 = (i54 * n282);
n286 = (!i23);
n287 = (i55 * n286);
n292 = (!i24);
n293 = (i56 * n292);
n295 = (!i25);
n296 = (i57 * n295);
n300 = (!i26);
n301 = (i58 * n300);
n304 = (!i27);
n305 = (i59 * n304);
n309 = (!i28);
n310 = (i60 * n309);
n312 = (!i29);
n313 = (i61 * n312);
n316 = (!i30);
n317 = (i62 * n316);
n320 = (!i31);
n321 = (i63 * n320);
n327 = (!i0 * i32) + (i0 * !i32);
n97 = (!i1 * i33) + (i1 * !i33);
n99 = (!i0);
n100 = (i32 * n99);
n106 = (!n105);
n108 = (!n107);
n114 = (n108 * n113);
n121 = (!n120);
n123 = (!n122);
n126 = (!n125);
n128 = (!n127);
n135 = (n128 * n134);
n138 = (!n135 * n137) + (n135 * !n137);
n142 = (n123 * n141);
n150 = (!n149);
n152 = (!n151);
n155 = (!n154);
n157 = (!n156);
n161 = (!n160);
n163 = (!n162);
n166 = (!n165);
n168 = (!n167);
n176 = (n168 * n175);
n179 = (!n176 * n178) + (n176 * !n178);
n184 = (n163 * n183);
n193 = (n157 * n192);
n196 = (!n193 * n195) + (n193 * !n195);
n200 = (n152 * n199);
n209 = (!n208);
n211 = (!n210);
n214 = (!n213);
n216 = (!n215);
n220 = (!n219);
n222 = (!n221);
n225 = (!n224);
n227 = (!n226);
n232 = (!n231);
n234 = (!n233);
n237 = (!n236);
n239 = (!n238);
n243 = (!n242);
n245 = (!n244);
n248 = (!n247);
n250 = (!n249);
n259 = (n250 * n258);
n262 = (!n259 * n261) + (n259 * !n261);
n267 = (n245 * n266);
n277 = (n239 * n276);
n280 = (!n277 * n279) + (n277 * !n279);
n284 = (n234 * n283);
n294 = (n227 * n293);
n297 = (!n294 * n296) + (n294 * !n296);
n302 = (n222 * n301);
n311 = (n216 * n310);
n314 = (!n311 * n313) + (n311 * !n313);
n318 = (n211 * n317);
n98 = (!n97);
n101 = (n100 * n98);
n104 = (!n101 * n103) + (n101 * !n103);
n109 = (n106 * n108);
n115 = (!n114);
n118 = (!n115 * n117) + (n115 * !n117);
n124 = (n121 * n123);
n129 = (n126 * n128);
n139 = (n124 * n138);
n143 = (!n142);
n146 = (!n143 * n145) + (n143 * !n145);
n153 = (n150 * n152);
n158 = (n155 * n157);
n164 = (n161 * n163);
n169 = (n166 * n168);
n180 = (n164 * n179);
n185 = (!n184);
n188 = (!n185 * n187) + (n185 * !n187);
n197 = (n153 * n196);
n201 = (!n200);
n204 = (!n201 * n203) + (n201 * !n203);
n212 = (n209 * n211);
n217 = (n214 * n216);
n223 = (n220 * n222);
n228 = (n225 * n227);
n235 = (n232 * n234);
n240 = (n237 * n239);
n246 = (n243 * n245);
n251 = (n248 * n250);
n263 = (n246 * n262);
n268 = (!n267);
n271 = (!n268 * n270) + (n268 * !n270);
n281 = (n235 * n280);
n285 = (!n284);
n288 = (!n285 * n287) + (n285 * !n287);
n298 = (n223 * n297);
n303 = (!n302);
n306 = (!n303 * n305) + (n303 * !n305);
n315 = (n212 * n314);
n319 = (!n318);
n322 = (!n319 * n321) + (n319 * !n321);
n110 = (n104 * n109);
n130 = (n124 * n129);
n147 = (!n139 * n146) + (n139 * !n146);
n159 = (n153 * n158);
n170 = (n164 * n169);
n181 = (!n180);
n189 = (!n181 * n188) + (n181 * !n188);
n205 = (!n197 * n204) + (n197 * !n204);
n218 = (n212 * n217);
n229 = (n223 * n228);
n241 = (n235 * n240);
n252 = (n246 * n251);
n264 = (!n263);
n272 = (!n264 * n271) + (n264 * !n271);
n289 = (!n281 * n288) + (n281 * !n288);
n299 = (!n298);
n307 = (!n299 * n306) + (n299 * !n306);
n323 = (!n315 * n322) + (n315 * !n322);
n111 = (!n110);
n119 = (!n111 * n118) + (n111 * !n118);
n131 = (n119 * n130);
n171 = (n159 * n170);
n190 = (n159 * n189);
n206 = (!n190 * n205) + (n190 * !n205);
n230 = (n218 * n229);
n253 = (n241 * n252);
n273 = (n241 * n272);
n308 = (n218 * n307);
n324 = (!n308 * n323) + (n308 * !n323);
n132 = (!n131);
n148 = (!n132 * n147) + (n132 * !n147);
n172 = (n148 * n171);
n254 = (n230 * n253);
n274 = (!n273);
n290 = (!n274 * n289) + (n274 * !n289);
n291 = (n230 * n290);
n325 = (!n291 * n324) + (n291 * !n324);
n173 = (!n172);
n207 = (!n173 * n206) + (n173 * !n206);
n255 = (n207 * n254);
n256 = (!n255);
n326 = (!n256 * n325) + (n256 * !n325);
n328 = (n326 * n327);
n330 = (n326 * n97);
n332 = (n105 * n326);
n334 = (n107 * n326);
n336 = (n125 * n326);
n338 = (n127 * n326);
n340 = (n120 * n326);
n342 = (n122 * n326);
n344 = (n165 * n326);
n346 = (n167 * n326);
n348 = (n160 * n326);
n350 = (n162 * n326);
n352 = (n154 * n326);
n354 = (n156 * n326);
n356 = (n149 * n326);
n358 = (n151 * n326);
n360 = (n247 * n326);
n362 = (n249 * n326);
n364 = (n242 * n326);
n366 = (n244 * n326);
n368 = (n236 * n326);
n370 = (n238 * n326);
n372 = (n231 * n326);
n374 = (n233 * n326);
n376 = (n224 * n326);
n378 = (n226 * n326);
n380 = (n219 * n326);
n382 = (n221 * n326);
n384 = (n213 * n326);
n386 = (n215 * n326);
n388 = (n208 * n326);
n390 = (n210 * n326);
om_0 = (!i32 * n328) + (i32 * !n328);
om_1 = (!i33 * n330) + (i33 * !n330);
om_10 = (!i42 * n348) + (i42 * !n348);
om_11 = (!i43 * n350) + (i43 * !n350);
om_12 = (!i44 * n352) + (i44 * !n352);
om_13 = (!i45 * n354) + (i45 * !n354);
om_14 = (!i46 * n356) + (i46 * !n356);
om_15 = (!i47 * n358) + (i47 * !n358);
om_16 = (!i48 * n360) + (i48 * !n360);
om_17 = (!i49 * n362) + (i49 * !n362);
om_18 = (!i50 * n364) + (i50 * !n364);
om_19 = (!i51 * n366) + (i51 * !n366);
om_2 = (!i34 * n332) + (i34 * !n332);
om_20 = (!i52 * n368) + (i52 * !n368);
om_21 = (!i53 * n370) + (i53 * !n370);
om_22 = (!i54 * n372) + (i54 * !n372);
om_23 = (!i55 * n374) + (i55 * !n374);
om_24 = (!i56 * n376) + (i56 * !n376);
om_25 = (!i57 * n378) + (i57 * !n378);
om_26 = (!i58 * n380) + (i58 * !n380);
om_27 = (!i59 * n382) + (i59 * !n382);
om_28 = (!i60 * n384) + (i60 * !n384);
om_29 = (!i61 * n386) + (i61 * !n386);
om_3 = (!i35 * n334) + (i35 * !n334);
om_30 = (!i62 * n388) + (i62 * !n388);
om_31 = (!i63 * n390) + (i63 * !n390);
om_4 = (!i36 * n336) + (i36 * !n336);
om_5 = (!i37 * n338) + (i37 * !n338);
om_6 = (!i38 * n340) + (i38 * !n340);
om_7 = (!i39 * n342) + (i39 * !n342);
om_8 = (!i40 * n344) + (i40 * !n344);
om_9 = (!i41 * n346) + (i41 * !n346);


new graph depth
---graph depth print---
var : om_0 depth : 7
var : om_1 depth : 7
var : om_2 depth : 7
var : om_3 depth : 7
var : om_4 depth : 7
var : om_5 depth : 7
var : om_6 depth : 7
var : om_7 depth : 7
var : om_8 depth : 7
var : om_9 depth : 7
var : om_10 depth : 7
var : om_11 depth : 7
var : om_12 depth : 7
var : om_13 depth : 7
var : om_14 depth : 7
var : om_15 depth : 7
var : om_16 depth : 7
var : om_17 depth : 7
var : om_18 depth : 7
var : om_19 depth : 7
var : om_20 depth : 7
var : om_21 depth : 7
var : om_22 depth : 7
var : om_23 depth : 7
var : om_24 depth : 7
var : om_25 depth : 7
var : om_26 depth : 7
var : om_27 depth : 7
var : om_28 depth : 7
var : om_29 depth : 7
var : om_30 depth : 7
var : om_31 depth : 7
---------------------
old mult depth : 7
new mult depth : 7
